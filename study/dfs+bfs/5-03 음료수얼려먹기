# 음료수 얼려 먹기

# 구멍0, 칸막이1 -> 총 아이스크림 개수 구하는 프로그램
def dfs(x, y):
    visited[x][y] = 1
    for i in range(4):
        nx = x + dx[i]
        ny = y + dy[i]
        if 0 <= nx < n and 0 <= ny < m and matrix[nx][ny]==0 and visited[nx][ny] == 0:
            dfs(nx, ny)

n, m = map(int, input().split())  # 세로, 가로
matrix = list(list(map(int, list(map(str, input())))) for _ in range(n))
visited = [[0] * m for _ in range(n)]


dx = [-1, 0, 1, 0]
dy = [0, -1, 0, 1]
cnt = 0

for i in range(n):
    for j in range(m):
        if matrix[i][j] == 0 and visited[i][j] == 0 :
            cnt += 1
            dfs(i, j)

print(cnt)

